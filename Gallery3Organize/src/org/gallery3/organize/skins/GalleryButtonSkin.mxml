<?xml version="1.0" encoding="utf-8"?>
<!--
* Gallery - a web based photo album viewer and editor
* Copyright (C) 2000-2010 Bharat Mediratta
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; either version 2 of the License, or (at
* your option) any later version.
*
* This program is distributed in the hope that it will be useful, but
* WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software
* Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA.
-->
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/halo"
		alpha.disabled=".5">
	<fx:Metadata>
		[HostComponent("spark.components.Button")]
	</fx:Metadata>

	<fx:Script>
		<![CDATA[
			import org.gallery3.organize.OrganizeStyle;
			
			[Bindable]
			private var foreColor:uint = OrganizeStyle.instance.color;
			[Bindable]
			private var backgroundColor:uint = OrganizeStyle.instance.backgroundColor;
			[Bindable]
			private var backgroundDownColor:uint = OrganizeStyle.instance.backgroundColor - 0x111111;
			[Bindable]
			private var selectedColor:uint = OrganizeStyle.instance.selectionColor;
			[Bindable]
			private var hoverColor:uint = OrganizeStyle.instance.rollOverColor;
			[Bindable]
			private var borderColor:uint = OrganizeStyle.instance.borderColor;
		]]>
	</fx:Script>
	
	<!-- states -->
	<s:states>
		<s:State name="up" />
		<s:State name="over" />
		<s:State name="down" />
		<s:State name="disabled" />
	</s:states>
	
	<!-- border and fill -->
	<s:Rect id="rect" radiusX="4" radiusY="4" top="0" right="0" bottom="0" left="0">
		<s:fill>
			<s:SolidColor color="{backgroundColor}" color.over="{hoverColor}" color.down="{backgroundDownColor}"/>
		</s:fill>
		<s:stroke>
			<s:SolidColorStroke color="{borderColor}" weight="1"/>
		</s:stroke>
	</s:Rect>
	
	<!-- text -->
	<s:Label id="labelDisplay" color="{borderColor}" 
			 textAlign="center"
			 verticalAlign="middle"
			 horizontalCenter="0" verticalCenter="1"
			 left="12" right="12" top="6" bottom="6" />
</s:Skin>
